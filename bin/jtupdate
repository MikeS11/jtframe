#!/bin/bash
MAX_JOBS=
DRYRUN=
NETWORK=
GIT=
CORESTAMP=$(date +"%Y%m%d")

function parse_args {
    while [ $# -gt 0 ]; do
        case "$1" in
            --jobs)
                shift
                MAX_JOBS="--jobs $1"
                ;;
            --corestamp)
                shift
                CORESTAMP=$1
                ;;
            --dry)
                DRYRUN=--dry-run
                ;;
            --git)
                GIT=1
                ;;
            --network)
                NETWORK="--sshloginfile .."
                ;;
            --actions)
                ACTIONS=yes
                ;;
            -h|--help)
                jtframe update --help
                exit 0;;
        esac
        shift
    done
}

parse_args $* || exit $?

if [ -z "$GIT" ]; then
    # Output to the release folder
    export JTBIN=$JTROOT/release
    rm -rf $JTBIN
    mkdir -p $JTBIN
else
    # Output to JTBIN
    cd $JTBIN
    if git status --short | grep -i "^ M " > /dev/null; then
        echo "JTBIN has uncommited changes. Do you want to continue [y/n]?"
        read CONT
        if [ $CONT != y ]; then
            exit 1
        fi
    fi
    if [ `git branch --show-current` = master ]; then
        git checkout -b `basename $JTROOT`_$CORESTAMP || exit $?
    fi
fi

# TASKS is a temporary file with the list of tasks
TASKS=`mktemp`

if [ -z "$ACTIONS" ]; then
    jtframe update $* >> $TASKS || exit 1
else
    # updates the action files
    jtframe update $*
    exit $?
fi

if [ $(cat $TASKS|wc -l) = 0 ]; then
    echo no jobs
    exit 1
fi

if [ -z "$DRYRUN" ]; then
    rm -f $JTROOT/log/builds.log
fi

# transfer the environment variables to each parallel server
source `which env_parallel.bash`

mkdir -p $JTROOT/log
rm -rf $JTROOT/log/*
if [ ! -z "$NETWORK" ]; then
    TEMP=`mktemp`
    while read line; do
        echo "./modules/jtframe/bin/jtnet.sh $JTBIN $TASKS" >> $TEMP
    done < $TASKS
    rm -f $TASKS
    TASKS=$TEMP
fi

cat $TASKS | parallel --no-run-if-empty --colsep " " --sshdelay 0.25 \
    --load 80% --memfree 4G --shuf  --workdir $JTROOT \
    $DRYRUN $NETWORK $MAX_JOBS\
    --delay 0.25 $CMD {} $EXTRA | tee $JTROOT/log/update.log

rm -f $TASKS